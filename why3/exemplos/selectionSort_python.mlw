
# Selection Sort 


def swap (v,i,j) : 
  #@ requires 0 <= i < len(v) 
  #@ requires 0 <= j < len(v) 
  #@ ensures v[j] == old(v[i])
  #@ ensures v[i] == old(v[j])
  #@ ensures forall k. 0<=k<len(v) and k!=i and k!=j -> v[k]==old(v[k]) 
  v[j], v[i] = v[i], v[j]



def min(v,i):
  #@ requires 0 <= i < len(v) 
  #@ ensures i <= result < len(v) 
  #@ ensures forall k. i <= k < len(v) -> v[result] <= v[k]
  #@ ensures forall k. 0 <= k < len(v) -> v[k] == old(v[k])
  m = i
  for j in range(i+1,len(v)):
    #@ invariant i <= m < j <= len(v) 
    #@ invariant forall k. i <= k < j -> v[k] >= v[m]
    if (v[j] < v[m]):
            m = j
  return m



def selSort(v) : 
  #@ ensures forall i,j. 0 <= i < j < len(v) -> v[i] <= v[j]
  for i in range(len(v)) :
    #@ invariant forall k1, k2. 0 <= k1 < k2 < i -> v[k1] <= v[k2]
    #@ invariant forall k1, k2. 0 <= k1 < i <= k2 < len(v) -> v[k1] <= v[k2]
    m = min(v,i)
    if m != i : swap (v,m,i)

      
